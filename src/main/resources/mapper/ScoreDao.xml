<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.ScoreDao">

    <resultMap type="com.example.entity.Score" id="ScoreMap">
        <result property="scoreId" column="score_id" jdbcType="INTEGER"/>
        <result property="studentId" column="student_id" jdbcType="INTEGER"/>
        <result property="credit" column="credit" jdbcType="INTEGER"/>
        <result property="usualGrade" column="usual_grade" jdbcType="NUMERIC"/>
        <result property="testGrade" column="test_grade" jdbcType="NUMERIC"/>
        <result property="scoreGrade" column="score_grade" jdbcType="NUMERIC"/>
        <result property="stageGrade" column="stage_grade" jdbcType="NUMERIC"/>
        <result property="state" column="state" jdbcType="NUMERIC"/>
        <result property="gradeState" column="grade_state" jdbcType="NUMERIC"/>
        <association property="course" column="course">
            <result property="courseId" column="course_id" jdbcType="INTEGER"/>
            <result property="courseName" column="course_name" jdbcType="VARCHAR"/>
            <result property="courseNum" column="course_num" jdbcType="VARCHAR"/>
            <result property="courseDesc" column="course_desc" jdbcType="VARCHAR"/>
            <result property="courseState" column="course_state" jdbcType="INTEGER"/>
            <result property="courseImg" column="course_img" jdbcType="VARCHAR"/>
            <result property="courseCredit" column="course_credit" jdbcType="INTEGER"/>
            <result property="startTime" column="start_time" jdbcType="TIMESTAMP"/>
            <result property="endTime" column="end_time" jdbcType="TIMESTAMP"/>
        </association>
        <association property="student" column="student">
            <result property="studentId" column="student_id" jdbcType="INTEGER"/>
            <result property="studentNum" column="student_num" jdbcType="VARCHAR"/>
            <result property="studentName" column="student_name" jdbcType="VARCHAR"/>
        </association>
    </resultMap>

    <sql id="find">
        select
            score_id, student_id, course_id, credit, usual_grade, test_grade, stage_grade, score_grade
        from score
    </sql>

    <!--查询单个-->
    <select id="findById" resultMap="ScoreMap">
        <include refid="find"/>
        where score_id = #{scoreId}
    </select>

    <!--查询所有数据-->
    <select id="findAll" resultMap="ScoreMap">
        <include refid="find"/>
        where state = 0
    </select>

    <select id="findByStudentIdAndCourseId" resultMap="ScoreMap">
        select *
        from score as sc LEFT OUTER JOIN course as co
        on sc.course_id = co.course_id
        where sc.student_id = #{studentId} and sc.course_id = #{courseId} and sc.state = 0
    </select>


    <select id="findCountByStudentId" resultType="int">
        select count(*)
        from score
        where student_id = #{studentId} and state = 0
    </select>

    <select id="findCountByCourseId" resultType="int">
        select count(*)
        from score
        where course_id = #{courseId} and state = 0
    </select>

    <select id="findList" resultMap="ScoreMap">
        select DISTINCT co.course_name,co.course_id
        from score as sc LEFT OUTER JOIN course as co
        on sc.course_id = co.course_id
        where 1=1
        <if test="courseName != ''">
            and course_name like concat('%',#{courseName},'%')
        </if>
        and sc.state = 0
    </select>

    <resultMap type="com.example.entity.Score" id="statistical">
        <association property="course" column="course">
            <result property="value" column="value" jdbcType="INTEGER"/>
            <result property="name" column="course_name" jdbcType="INTEGER"/>
        </association>
    </resultMap>

    <select id="statistical" resultMap="statistical">
        SELECT count(*) as value,co.course_name
        FROM score  as sc LEFT OUTER JOIN course as co
        on sc.course_id = co.course_id
        WHERE sc.state = 0
        GROUP BY sc.course_id
    </select>


    <resultMap id="findStudentMap" type="Course">
        <result property="courseId" column="course_id" jdbcType="INTEGER"/>
        <result property="courseName" column="course_name" jdbcType="VARCHAR"/>
        <result property="courseNum" column="course_num" jdbcType="VARCHAR"/>
        <result property="courseDesc" column="course_desc" jdbcType="VARCHAR"/>
        <result property="courseState" column="course_state" jdbcType="INTEGER"/>
        <result property="courseImg" column="course_img" jdbcType="VARCHAR"/>
        <result property="courseCredit" column="course_credit" jdbcType="INTEGER"/>
        <result property="startTime" column="start_time" jdbcType="TIMESTAMP"/>
        <result property="endTime" column="end_time" jdbcType="TIMESTAMP"/>
        <collection property="studentList" ofType="student">
            <result property="studentId" column="student_id" jdbcType="INTEGER"/>
            <result property="studentNum" column="student_num" jdbcType="VARCHAR"/>
            <result property="studentName" column="student_name" jdbcType="VARCHAR"/>
            <result property="studentSex" column="student_sex" jdbcType="INTEGER"/>
            <result property="studentAge" column="student_age" jdbcType="VARCHAR"/>
            <result property="studentNational" column="student_national" jdbcType="VARCHAR"/>
            <result property="studentEmail" column="student_email" jdbcType="VARCHAR"/>
            <result property="studentCard" column="student_card" jdbcType="VARCHAR"/>
            <result property="studentPhone" column="student_phone" jdbcType="VARCHAR"/>
            <result property="studentImg" column="student_img" jdbcType="VARCHAR"/>
            <result property="studentPassword" column="student_password" jdbcType="VARCHAR"/>
            <association property="classes" javaType="classes">
                <result property="classesId" column="classes_id" jdbcType="INTEGER"/>
                <result property="classesNum" column="classes_num" jdbcType="VARCHAR"/>
                <result property="classesName" column="classes_name" jdbcType="VARCHAR"/>
                <result property="classesAllNumber" column="classes_all_number" jdbcType="INTEGER"/>
                <association property="grade" javaType="grade">
                    <result property="gradeId" column="grade_id" jdbcType="INTEGER"/>
                    <result property="gradeNum" column="grade_num" jdbcType="VARCHAR"/>
                    <result property="gradeName" column="grade_name" jdbcType="VARCHAR"/>
                    <association property="professional" javaType="professional">
                        <result property="professionalId" column="professional_id" jdbcType="INTEGER"/>
                        <result property="professionalNum" column="professional_num" jdbcType="VARCHAR"/>
                        <result property="professionalName" column="professional_name" jdbcType="VARCHAR"/>
                        <association property="college" javaType="college">
                            <result property="collegeId" column="college_id" jdbcType="INTEGER"/>
                            <result property="collegeNum" column="college_num" jdbcType="VARCHAR"/>
                            <result property="collegeName" column="college_name" jdbcType="VARCHAR"/>
                        </association>
                    </association>
                </association>
            </association>
        </collection>

    </resultMap>

    <sql id="findAll">
        select *
        from score as sc LEFT OUTER JOIN course as cou
                                         on sc.course_id = cou.course_id
                         LEFT OUTER JOIN student AS s
                                         on sc.student_id = s.student_id
                         LEFT OUTER JOIN classes AS c
                                         ON s.classes_id = c.classes_id
                         LEFT OUTER JOIN grade AS g
                                         ON c.grade_id = g.grade_id
                         LEFT OUTER JOIN professional AS p
                                         ON g.professional_id = p.professional_id
                         LEFT OUTER JOIN college AS co
                                         ON p.college_id = co.college_id
    </sql>

    <select id="findByCourseId" resultMap="findStudentMap">
        <include refid="findAll"/>
        where cou.course_id = #{courseId} and sc.state = 0
    </select>

    <select id="findByCourse" resultMap="findStudentMap">
        <include refid="findAll"/>
        where cou.course_id = #{courseId} and sc.grade_state=0
    </select>

    <sql id="findLeftCourse">
        select *
        from score as sc LEFT OUTER JOIN course as co
        on sc.course_id = co.course_id
    </sql>

    <select id="findByStudentId" resultMap="ScoreMap">
        <include refid="findLeftCourse"/>
        where sc.student_id = #{studentId} and sc.state = 0
    </select>

    <select id="findCourse" resultMap="ScoreMap">
        <include refid="findLeftCourse"/>
        where sc.student_id = #{studentId} and sc.state = 0 or sc.state = 1
    </select>

    <select id="findBxCourse" resultMap="ScoreMap">
        <include refid="findLeftCourse"/>
        where sc.student_id = #{studentId} and sc.state = 2
    </select>

    <!--查看选修人数-->
    <select id="checkCount" resultType="java.lang.Integer">
        SELECT count(*)
        from score where course_id = #{courseId}
    </select>

    <select id="findScoreByCourseId" resultMap="ScoreMap">
        <include refid="findLeftCourse"/>
        left outer join student s
        on sc.student_id = s.student_id
        where co.course_id = #{courseId}
    </select>

    <sql id="findCount">
        SELECT count(*) count
        from score
    </sql>
    <select id="findYxCount" resultType="int">
        <include refid="findCount"/>
        WHERE score_grade >= 90 AND course_id = #{courseId}
    </select>
    <select id="findLhCount" resultType="java.lang.Integer">
        <include refid="findCount"/>
        WHERE score_grade >= 80 AND  90 > score_grade AND course_id = #{courseId}
    </select>
    <select id="findZdCount" resultType="java.lang.Integer">
        <include refid="findCount"/>
        WHERE score_grade >= 70 AND  80 > score_grade AND course_id = #{courseId}
    </select>
    <select id="findJgCount" resultType="java.lang.Integer">
        <include refid="findCount"/>
        WHERE score_grade >= 60 AND  70 > score_grade AND course_id = #{courseId}
    </select>
    <select id="findBjgCount" resultType="java.lang.Integer">
        <include refid="findCount"/>
        WHERE 60 > score_grade AND course_id = #{courseId}
    </select>

    <select id="scoreList" resultMap="ScoreMap">
        select *
        from (SELECT s.*,c.course_name,st.student_name,st.student_num
        from score s LEFT OUTER JOIN course c
        on s.course_id = c.course_id
        LEFT OUTER JOIN student st
        on s.student_id = st.student_id
        where s.state != 1 ) as a
        where 1 = 1
        <if test="courseName != ''">
            and a.course_name like concat('%',#{courseName},'%')
        </if>
        <if test="studentName != ''">
            or a.student_name like concat('%',#{studentName},'%')
        </if>
    </select>

    <select id="findCreditStatistical" resultType="java.util.HashMap">
        SELECT c.course_id courseId,c.course_name courseName,AVG(sc.credit) creditAvg,c.course_credit credit
        FROM score sc
        LEFT OUTER JOIN course c
        ON sc.course_id = c.course_id
        WHERE c.teacher_id = #{teacherId}
        GROUP BY sc.course_id
    </select>

    <!--新增-->
    <insert id="insert">
        insert into score(student_id, course_id, state, grade_state) values (#{studentId}, #{courseId}, #{state}, #{gradeState})
    </insert>

    <!--必修课录入成绩-->
    <insert id="entryInsert">
        insert into score(student_id, course_id, state, grade_state,credit,usual_grade,test_grade,score_grade,stage_grade)
        values (#{studentId}, #{courseId}, #{state}, #{gradeState}, #{credit},#{usualGrade},#{testGrade},#{scoreGrade},#{stageGrade})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update score
        <set>
            <if test="studentId != null">
                student_id = #{studentId},
            </if>
            <if test="courseId != null">
                course_id = #{courseId},
            </if>
            <if test="credit != null">
                credit = #{credit},
            </if>
            <if test="usualGrade != null">
                usual_grade = #{usualGrade},
            </if>
            <if test="testGrade != null">
                test_grade = #{testGrade},
            </if>
            <if test="stageGrade != null">
                stage_grade = #{stageGrade},
            </if>
            <if test="scoreGrade != null">
                score_grade = #{scoreGrade},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="gradeState != null">
                grade_state = #{gradeState},
            </if>
        </set>
        where score_id = #{scoreId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from score where score_id = #{scoreId}
    </delete>

    <delete id="deleteCheck">
        delete from score where course_id = #{courseId}
    </delete>
</mapper>

