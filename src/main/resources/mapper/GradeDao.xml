<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.GradeDao">

    <resultMap type="com.example.entity.Grade" id="GradeMap">
        <result property="gradeId" column="grade_id" jdbcType="INTEGER"/>
        <result property="gradeNum" column="grade_num" jdbcType="VARCHAR"/>
        <result property="gradeName" column="grade_name" jdbcType="VARCHAR"/>
        <association property="professional" javaType="professional">
            <result property="professionalId" column="professional_id" jdbcType="INTEGER"/>
            <result property="professionalNum" column="professional_num" jdbcType="VARCHAR"/>
            <result property="professionalName" column="professional_name" jdbcType="VARCHAR"/>
            <association property="college" javaType="college">
                <result property="collegeId" column="college_id" jdbcType="INTEGER"/>
                <result property="collegeNum" column="college_num" jdbcType="VARCHAR"/>
                <result property="collegeName" column="college_name" jdbcType="VARCHAR"/>
            </association>
        </association>
    </resultMap>

    <!--查询单个-->
    <select id="findById" resultMap="GradeMap">
        SELECT *
        FROM grade AS g LEFT OUTER JOIN professional AS p
        ON g.professional_id = p.professional_id
        LEFT OUTER JOIN college AS c
        ON p.college_id = c.college_id
        where g.grade_id = #{gradeId}
    </select>

    <!--根据专业ID查年级-->
    <select id="findByProfessionalId" resultMap="GradeMap">
        SELECT *
        FROM grade AS g LEFT OUTER JOIN professional AS p
        ON g.professional_id = p.professional_id
        LEFT OUTER JOIN college AS c
        ON p.college_id = c.college_id
        where g.professional_id = #{professionalId}
    </select>

    <!--添加时唯一性检查-->
    <select id="findByProfessionalIdAndGradeName" resultMap="GradeMap">
        SELECT *
        FROM grade
        where professional_id = #{professionalId} and grade_name = #{gradeName}
    </select>

    <!--修改时唯一性检查-->
    <select id="findByIdAndProfessionalIdAndGradeName" resultMap="GradeMap">
        SELECT *
        FROM grade
        where grade_id != #{gradeId} and professional_id = #{professionalId} and grade_name = #{gradeName}
    </select>

    <!--查询所有数据-->
    <select id="findAll" resultMap="GradeMap">
        SELECT *
        FROM grade AS g LEFT OUTER JOIN professional AS p
        ON g.professional_id = p.professional_id
        LEFT OUTER JOIN college AS c
        ON p.college_id = c.college_id
    </select>

    <!--分页查询-->
    <select id="findList" resultMap="GradeMap">
        SELECT *
        FROM grade AS g LEFT OUTER JOIN professional AS p
        ON g.professional_id = p.professional_id
        LEFT OUTER JOIN college AS c
        ON p.college_id = c.college_id
        where 1=1
        <if test="gradeNum != ''">
            and grade_num like concat('%',#{gradeNum},'%')
        </if>
        <if test="gradeName != ''">
            or grade_name like concat('%',#{gradeName},'%')
        </if>
        order by grade_id desc
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="gradeId" useGeneratedKeys="true">
        insert into grade(grade_num, grade_name, professional_id)
        values (#{gradeNum}, #{gradeName}, #{professional.professionalId})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update grade
        <set>
            <if test="gradeNum != null and gradeNum != ''">
                grade_num = #{gradeNum},
            </if>
            <if test="gradeName != null and gradeName != ''">
                grade_name = #{gradeName},
            </if>
            <if test="professional.professionalId != null">
                professional_id = #{professional.professionalId},
            </if>
        </set>
        where grade_id = #{gradeId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from grade where grade_id = #{gradeId}
    </delete>

    <!--批量删除-->
    <delete id="deleteBatch" >
        delete from grade where grade_id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>

