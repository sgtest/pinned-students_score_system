<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.ProfessionalDao">

    <resultMap type="com.example.entity.Professional" id="ProfessionalMap">
        <result property="professionalId" column="professional_id" jdbcType="INTEGER"/>
        <result property="professionalNum" column="professional_num" jdbcType="VARCHAR"/>
        <result property="professionalName" column="professional_name" jdbcType="VARCHAR"/>
        <result property="professionalCode" column="professional_code" jdbcType="VARCHAR"/>
        <association property="college" javaType="college">
            <result property="collegeId" column="college_id" jdbcType="INTEGER"/>
            <result property="collegeNum" column="college_num" jdbcType="VARCHAR"/>
            <result property="collegeName" column="college_name" jdbcType="VARCHAR"/>
        </association>
    </resultMap>

    <sql id="find">
        SELECT *
        FROM professional AS p LEFT OUTER JOIN college AS c
                                               ON p.college_id = c.college_id
    </sql>

    <!--查询单个-->
    <select id="findById" resultMap="ProfessionalMap">
        <include refid="find"/>
        where professional_id = #{professionalId}
    </select>

    <!--根据院系ID查专业-->
    <select id="findByCollegeId" resultMap="ProfessionalMap">
        <include refid="find"/>
        where p.college_id = #{collegeId}
    </select>

    <!--添加时唯一性检查-->
    <select id="findByCollegeIdAndProfessionalName" resultMap="ProfessionalMap">
        SELECT *
        FROM professional
        where college_id = #{collegeId} and professional_name = #{professionalName}
    </select>

    <!--修改时唯一性检查-->
    <select id="findByIdAndCollegeIdAndProfessionalName" resultMap="ProfessionalMap">
        SELECT *
        FROM professional
        where professional_id != #{professionalId} and college_id = #{collegeId} and professional_name = #{professionalName}
    </select>

    <!--查询所有数据-->
    <select id="findAll" resultMap="ProfessionalMap">
        <include refid="find"/>
    </select>

    <!--分页查询-->
    <select id="findList" resultMap="ProfessionalMap">
        <include refid="find"/>
        where 1=1
        <if test="professionalNum != ''">
            and professional_num like concat('%',#{professionalNum},'%')
        </if>
        <if test="professionalNum != ''">
            or professional_name like concat('%',#{professionalName},'%')
        </if>
        order by professional_id desc
    </select>

    <select id="findCount" resultType="java.lang.Integer">
        select count(*) from professional
    </select>

    <select id="findMaxCode" resultType="string">
        SELECT MAX(professional_code)+1 FROM professional
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="professionalId" useGeneratedKeys="true">
        insert into professional(professional_num, professional_name, professional_code, college_id)
        values (#{professionalNum}, #{professionalName}, #{professionalCode}, #{college.collegeId})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update professional
        <set>
            <if test="professionalNum != null and professionalNum != ''">
                professional_num = #{professionalNum},
            </if>
            <if test="professionalName != null and professionalName != ''">
                professional_name = #{professionalName},
            </if>
            <if test="professionalCode != null and professionalCode != ''">
                professional_code = #{professionalCode},
            </if>
            <if test="college.collegeId != null">
                college_id = #{college.collegeId},
            </if>
        </set>
        where professional_id = #{professionalId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from professional where professional_id = #{professionalId}
    </delete>

    <!--批量删除-->
    <delete id="deleteBatch" >
        delete from professional where professional_id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>

